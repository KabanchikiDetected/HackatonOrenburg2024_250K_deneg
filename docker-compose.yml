services:
  # nginx
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backbone
    depends_on:
      - users
      - news
      - events
      - universities
      - search_and_filter
      - students
      - market
    volumes:
      - ./files:/tmp/files/
      - ./frontend/dist:/root/mc/

  # Our code
  users:
    container_name: users
    hostname: users
    restart: always
    build:
      context: ./users
    ports:
      - "8000:8000"
    expose:
      - 8000
    depends_on:
      - mongo
    environment:
      - ENV_TYPE=local
    networks:
      - backbone
  
  events:
    container_name: events
    hostname: events
    restart: always
    build:
      context: ./events
    ports:
      - "8002:8002"
    expose:
      - 8002
    depends_on:
      - mongo
    environment:
      - ENV_TYPE=local
    networks:
      - backbone
    volumes:
      - ./files:/app/media/
  
  news:
    container_name: news
    hostname: news
    restart: always
    build:
      context: ./news
    ports:
      - "8001:8001"
    expose:
      - 8001
    depends_on:
      - postgres
    env_file:
      - ./news/.env-local
    networks:
      - backbone
    volumes:
      - ./files:/app/media/
  
  universities:
    container_name: universities
    hostname: universities
    restart: always
    build:
      context: ./universities
    ports:
      - "8003:8003"
    expose:
      - 8003
    depends_on:
      - postgres
    env_file:
      - ./universities/.env-local
    networks:
      - backbone
    volumes:
      - ./files:/app/media/

  search_and_filter:
    container_name: search_and_filter
    hostname: search_and_filter
    restart: always
    build:
      context: ./search_and_filter
    ports:
      - "8004:8004"
    expose:
      - 8004
    env_file:
      - ./search_and_filter/.env-local
    networks:
      - backbone
  
  students:
    container_name: students
    hostname: students
    restart: always
    build:
      context: ./students
    ports:
      - "8005:8005"
    expose:
      - 8005
    depends_on:
      - mongo
    environment:
      - ENV_TYPE=local
    networks:
      - backbone
    volumes:
      - ./files:/app/media/
  
  market:
    container_name: market
    hostname: market
    restart: always
    build:
      context: ./market
    ports:
      - "8006:8006"
    expose:
      - 8006
    environment:
      - ENV_TYPE=local
    networks:
      - backbone
    volumes:
      - ./files:/app/media/
  
  # databases
  mongo:
    container_name: mongodb
    hostname: mongodb
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: passwordXD_1234
      MONGO_INITDB_DATABASE: local
    ports:
      - 27017:27017
    networks:
      - backbone
    volumes:
      - mongo_data:/data/db
  
  postgres:
    container_name: postgres
    hostname: postgres
    build:
      context: ./postgres 
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: passwordXD_1234
      POSTGRES_DB: local
    ports:
      - 5432:5432
    networks:
      - backbone
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    hostname: redis
    container_name: redis
    environment:
      - REDIS_DATABASES=1
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backbone


networks:
  backbone:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local
  